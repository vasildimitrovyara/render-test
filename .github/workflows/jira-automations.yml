name: Jira Automations

on:
  issue_comment:
    types: [created]
  pull_request_review:
  pull_request:
    types:
      [
        opened,
        closed,
        ready_for_review,
        review_requested,
        review_request_removed,
      ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Jira Example
    steps:
      # - uses: actions/github-script@v6
      #   id: get_issue_number
      #   with:
      #     script: |
      #       if (context.issue.number) {
      #         // Return issue number if present
      #         return context.issue.number;
      #       } else {
      #         // Otherwise return issue number from commit
      #         return (
      #           await github.rest.repos.listPullRequestsAssociatedWithCommit({
      #             commit_sha: context.sha,
      #             owner: context.repo.owner,
      #             repo: context.repo.repo,
      #           })
      #         ).data[0].number;
      #       }
      #     result-encoding: string
      # - name: Issue number
      #   run: echo '${{steps.get_issue_number.outputs.result}}'
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
    # - name: Find Comment
    #   uses: peter-evans/find-comment@v2
    #   id: fc
    #   with:
    #     issue-number: 1
    #     body-includes: search string Render
    #     direction: last
    # - name: Get issue number
    # - run: |
    #   echo github.event.issue.number
    # - name: Jira TODO
    #   uses: atlassian/gajira-todo@v3
    #   with:
    #     project: GA
    #     issuetype: Task
    #     description: Created automatically via GitHub Actions
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Find in commit messages
        uses: atlassian/gajira-find-issue-key@v3
        with:
          string: ${{ github.event.ref }}
      # - name: Comment on issue
      #   uses: atlassian/gajira-comment@v3
      #   with:
      #     issue: $BITRISE_GIT_BRANCH
      #     comment: 'text'
  # add-render-link-to-issue:
  #   name: Add render link to issue
  #   # if: github.event.issue.pull_request != '' && contains(github.event.comment.user.login, 'render[bot]')
  #   runs-on: ubuntu-latest
  #   env:
  #     JIRA_AUTOMATION_USER: ${{secrets.JIRA_AUTOMATION_USER}}
  #     JIRA_AUTOMATION_TOKEN: ${{secrets.JIRA_AUTOMATION_TOKEN}}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/github-script@v4
  #       with:
  #         github-token: ${{secrets.GITHUB_TOKEN}}
  #         script: |
  #           const path = require('path');

  #           return require(path.resolve('.github/scripts/jira-automations/actionComment.js'))({
  #             github,
  #             context,
  #             actionName: 'renderLinkComment',
  #           });
  # sync-developers-check-on-issue:
  #   name: Sync developers' check on issue
  #   if: github.event_name == 'pull_request_review' || (github.event_name == 'pull_request' && (github.event.action == 'review_requested' || github.event.action == 'review_request_removed'))
  #   runs-on: ubuntu-latest
  #   env:
  #     JIRA_AUTOMATION_USER: ${{secrets.JIRA_AUTOMATION_USER}}
  #     JIRA_AUTOMATION_TOKEN: ${{secrets.JIRA_AUTOMATION_TOKEN}}
  #     BRANCH_NAME: ${{github.event.pull_request.head.ref}}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/github-script@v4
  #       with:
  #         github-token: ${{secrets.GITHUB_TOKEN}}
  #         script: |
  #           const path = require('path');

  #           return require(path.resolve('.github/scripts/jira-automations/actionPR.js'))({
  #             github,
  #             context,
  #             head_ref: process.env.BRANCH_NAME,
  #             actionName: 'prReview',
  #           });
  # pr-opened:
  #   name: PR is ready for review
  #   if: github.event_name == 'pull_request' && (github.event.action == 'ready_for_review' || (github.event.action == 'opened' && github.event.pull_request.draft == false))
  #   runs-on: ubuntu-latest
  #   env:
  #     JIRA_AUTOMATION_USER: ${{secrets.JIRA_AUTOMATION_USER}}
  #     JIRA_AUTOMATION_TOKEN: ${{secrets.JIRA_AUTOMATION_TOKEN}}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/github-script@v4
  #       with:
  #         github-token: ${{secrets.GITHUB_TOKEN}}
  #         script: |
  #           const path = require('path');

  #           return require(path.resolve('.github/scripts/jira-automations/actionPR.js'))({
  #             github,
  #             context,
  #             head_ref: '${{github.head_ref}}',
  #             actionName: 'prOpened',
  #           });
  # pr-merged:
  #   name: Handle PR merge
  #   if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
  #   runs-on: ubuntu-latest
  #   env:
  #     JIRA_AUTOMATION_USER: ${{secrets.JIRA_AUTOMATION_USER}}
  #     JIRA_AUTOMATION_TOKEN: ${{secrets.JIRA_AUTOMATION_TOKEN}}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/github-script@v4
  #       with:
  #         github-token: ${{secrets.GITHUB_TOKEN}}
  #         script: |
  #           const path = require('path');

  #           return require(path.resolve('.github/scripts/jira-automations/actionPR.js'))({
  #             github,
  #             context,
  #             head_ref: '${{github.head_ref}}',
  #             actionName: 'prMerged',
  #           });
  # releaseSuccessComment:
  #   name: Handle release success comment
  #   if: github.event.issue.pull_request != '' && contains(github.event.comment.user.login, 'yara-botato') && contains(github.event.comment.body, 'release')
  #   runs-on: ubuntu-latest
  #   env:
  #     JIRA_AUTOMATION_USER: ${{secrets.JIRA_AUTOMATION_USER}}
  #     JIRA_AUTOMATION_TOKEN: ${{secrets.JIRA_AUTOMATION_TOKEN}}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/github-script@v4
  #       with:
  #         github-token: ${{secrets.GITHUB_TOKEN}}
  #         script: |
  #           const path = require('path');

  #           return require(path.resolve('.github/scripts/jira-automations/actionComment.js'))({
  #             github,
  #             context,
  #             actionName: 'releaseSuccess'
  #           }); 